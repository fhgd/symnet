==== symnet

Symnet is a python program used for symbolic network analysis. It's main
purpose is the extraction of the circuit equations from a electrical network
given as a netlist. Symnet depends on

    * sympycore (for dealing with the symbolic expressions)
    * pyparsing (for parsing the netlist)

Up to now only the basic network elements are implemented:

    * Constant voltage and current sources: V, I
    * Passive elements: R, L, C
    * Controlled Sources: E, F, G, H

            u = E(u)    i = F(i)    i = G(u)    u = H(i)

    * Nullator: U
    * Norator: N
    * Open circuit: O

Once the network topology of the electric circuit is defined, a tree of this
network must be choosen. A tree is a subgraph of the network which connects
all nodes with some selected branches without making a loop. Afterwards a
node- or loop analysis is used to build up the circuit equations. In case of
the modified nodal analysis (mna) the standard star-shaped tree is build
automatically.

Here is an example with the simple voltage divider:

    >>> g, ctrl_src = parse_netlist("""
    Vin 1 0
    R1  1 2
    R2  2 0
    """)
    >>> tree = g.tree(['Vin', 'R2'])
    >>> eqs, vars = loop_analysis(g, ctrl_src, tree)
    >>> A, b = create_matrices(eqs, vars)
    >>> print pprint_linear(A, vars, b)
      [ R1 + R2] [ I_R2]   =   Vin

Then sympycore can be used to solve this equation for I_R2:

    >>> num, denom = solve_linear(Matrix(A), vars, Matrix(b), 'I_R2')
    >>> print num
    >>> print '-' * max(len(str(num)), len(str(denom)))
    >>> print denom
    Vin
    -------
    R1 + R2

If the solution becomes more complicated the equations should be solve
by mathematica:

    >>> print pprint_mathematica(eqs, vars)
    Solve[{
        I_R2*R1 + I_R2*R2 - Vin == 0
    }, {
        I_R2
    }]

By using the modified nodal analysis the tree is build up automatically:

    >>> eqs, vars, tree = mna(g, ctrl_src)
    >>> A, b = create_matrices(eqs, vars)
    >>> print pprint_linear(A, vars, b)
      [ G_R1 + G_R2] [ V2]   =   G_R1*Vin

symnet is in a very early development stage. Any help and especially some
application circuits are welcome:

    Friedrich Hagedorn <friedrich_h@gmx.de>

Now have fun with your circuit equations :-)
